<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2WX/D/JsLQSgSNnFAAAAAElFTkSuQmCC
</value>
  </data>
</root>